diff --git a/CPP/7zip/7zip_gcc.mak b/CPP/7zip/7zip_gcc.mak
index fcb580a..0ccea23 100644
--- a/CPP/7zip/7zip_gcc.mak
+++ b/CPP/7zip/7zip_gcc.mak
@@ -23,9 +23,11 @@ PROGPATH = $(O)/$(PROG)
 PROGPATH_STATIC = $(O)/$(PROG)s
 
 
+ifndef EMSCRIPTEN
 ifneq ($(CC), xlc)
 CFLAGS_WARN_WALL = -Werror -Wall -Wextra
 endif
+endif
 
 # for object file
 # -Wa,-aln=test.s
@@ -111,7 +113,11 @@ endif
 
 else
 
+ifdef EMSCRIPTEN
+LDFLAGS = $(LDFLAGS_STATIC) $(LDFLAGS_EMCC)
+else
 LDFLAGS = $(LDFLAGS_STATIC)
+endif
 # -z force-bti
 # -s is not required for clang, do we need it for GCC ???
 
diff --git a/CPP/7zip/Bundles/Alone2/makefile.emcc b/CPP/7zip/Bundles/Alone2/makefile.emcc
new file mode 100644
index 0000000..1e2361c
--- /dev/null
+++ b/CPP/7zip/Bundles/Alone2/makefile.emcc
@@ -0,0 +1,3 @@
+include ./makefile.gcc
+
+PROG = 7zz.js
diff --git a/CPP/7zip/Bundles/Alone2/post.js b/CPP/7zip/Bundles/Alone2/post.js
new file mode 100644
index 0000000..607ce26
--- /dev/null
+++ b/CPP/7zip/Bundles/Alone2/post.js
@@ -0,0 +1,4 @@
+Module.FS = FS;
+Module.NODEFS = NODEFS;
+Module.WORKERFS = WORKERFS;
+Module.callMain = callMain;
\ No newline at end of file
diff --git a/CPP/7zip/Bundles/Alone2/pre.js b/CPP/7zip/Bundles/Alone2/pre.js
new file mode 100644
index 0000000..2084ccb
--- /dev/null
+++ b/CPP/7zip/Bundles/Alone2/pre.js
@@ -0,0 +1 @@
+Module.noInitialRun = true;
\ No newline at end of file
diff --git a/CPP/Windows/System.cpp b/CPP/Windows/System.cpp
index 540aa40..f02d252 100644
--- a/CPP/Windows/System.cpp
+++ b/CPP/Windows/System.cpp
@@ -8,6 +8,7 @@
 #if defined(__APPLE__) || defined(__DragonFly__) || \
     defined(BSD) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__)
 #include <sys/sysctl.h>
+#elif __EMSCRIPTEN__
 #else
 #include <sys/sysinfo.h>
 #endif
@@ -262,6 +263,7 @@ bool GetRamSize(size_t &size)
   #elif defined(__FreeBSD_kernel__) && defined(__GLIBC__)
   // GNU/kFreeBSD Debian
   // fixme
+  #elif defined(__EMSCRIPTEN__)
   #else
 
   struct sysinfo info;
diff --git a/CPP/Windows/SystemInfo.cpp b/CPP/Windows/SystemInfo.cpp
index 4ad1fcc..982946a 100644
--- a/CPP/Windows/SystemInfo.cpp
+++ b/CPP/Windows/SystemInfo.cpp
@@ -35,7 +35,9 @@
 #ifdef Z7_GETAUXV_AVAILABLE
 // #if defined __has_include
 // #if __has_include (<sys/auxv.h>)
+#ifndef __EMSCRIPTEN__
 #include <sys/auxv.h>
+#endif
 #define USE_HWCAP
 // #endif
 // #endif
@@ -803,6 +805,7 @@ void AddCpuFeatures(AString &s)
 
   #endif
 
+  #ifndef __EMSCRIPTEN__
 
   #ifdef AT_HWCAP
   s.Add_OptSpaced("hwcap:");
@@ -848,6 +851,8 @@ void AddCpuFeatures(AString &s)
     }
   }
   #endif // AT_HWCAP2
+  
+  #endif // __EMSCRIPTEN__
   #endif // _AIX
   #endif // _WIN32
 }
-- 
2.43.0

